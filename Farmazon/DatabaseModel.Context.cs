//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Farmazon
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Farmazon_dbEntities : DbContext
    {
        public Farmazon_dbEntities()
            : base("name=Farmazon_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Farm> Farms { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
    
        public virtual int CreateFarm(string farmName, string userId, string description, string location)
        {
            var farmNameParameter = farmName != null ?
                new ObjectParameter("FarmName", farmName) :
                new ObjectParameter("FarmName", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateFarm", farmNameParameter, userIdParameter, descriptionParameter, locationParameter);
        }
    
        public virtual int CreateInventoryItem(string sellerId, Nullable<int> quantity, Nullable<decimal> price, string productName, string photoLocation, string description, Nullable<int> reviewCount, Nullable<int> reviewStars)
        {
            var sellerIdParameter = sellerId != null ?
                new ObjectParameter("SellerId", sellerId) :
                new ObjectParameter("SellerId", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var photoLocationParameter = photoLocation != null ?
                new ObjectParameter("PhotoLocation", photoLocation) :
                new ObjectParameter("PhotoLocation", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var reviewCountParameter = reviewCount.HasValue ?
                new ObjectParameter("ReviewCount", reviewCount) :
                new ObjectParameter("ReviewCount", typeof(int));
    
            var reviewStarsParameter = reviewStars.HasValue ?
                new ObjectParameter("ReviewStars", reviewStars) :
                new ObjectParameter("ReviewStars", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateInventoryItem", sellerIdParameter, quantityParameter, priceParameter, productNameParameter, photoLocationParameter, descriptionParameter, reviewCountParameter, reviewStarsParameter);
        }
    
        public virtual int CreateMarketItem(string title, string description, string photoLocation)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var photoLocationParameter = photoLocation != null ?
                new ObjectParameter("PhotoLocation", photoLocation) :
                new ObjectParameter("PhotoLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateMarketItem", titleParameter, descriptionParameter, photoLocationParameter);
        }
    
        public virtual int DeleteInventoryItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInventoryItem", idParameter);
        }
    
        public virtual int DeleteMarketItem(Nullable<int> marketItemID)
        {
            var marketItemIDParameter = marketItemID.HasValue ?
                new ObjectParameter("MarketItemID", marketItemID) :
                new ObjectParameter("MarketItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMarketItem", marketItemIDParameter);
        }
    }
}
